You are building the frontend for a property rental platform whose backend is already implemented in GraphQL Federation with multiple microservices and PostgreSQL. The database and APIs are ready, so focus only on the frontend.

I have initialized the project with Next.js and set up Supabase Auth. Build the rest of the frontend to be an exact replica of Airbnb. Visit and study https://www.airbnb.com to carefully replicate its UI/UX components, flows, styling, animations, and skeleton loaders.

Key requirements:
1. **Airbnb Replica**: Replicate the design, navigation, property listings, property detail pages, booking flow, and user profile flow as closely as possible to Airbnb. Ensure the layout, fonts, spacing, and card styles feel identical to Airbnb. Be pixel-perfect wherever possible.
   
2. **PWA First**: Implement full PWA functionality (installable, offline caching with service worker, responsive design). This is important because we are not building a separate mobile app. It must look and behave like Airbnb across mobile and desktop.

3. **Booking + WhatsApp CTA**: When a user schedules a viewing (makes a booking), show the normal Airbnb-like date selection form. In addition, add a prominent “Contact via WhatsApp” button. When clicked, this should open WhatsApp with a pre-filled message that includes key info about the property (property title, location, and link).

4. **SSR & CSR Strategy**:
   - Use **Server-Side Rendering (SSR)** for the **property detail page** (a single property view) for SEO and fast load. 
   - For the **homepage (listings page)**, fetch data client-side with GraphQL and display **skeleton loaders** similar to Airbnb while loading. 
   - The backend is a GraphQL API — fetch data directly via Apollo Client or urql.

5. **Auth & State**: The app already has Supabase Auth initialized. Integrate login/signup/logout flows to mirror Airbnb’s auth modals. Use Supabase session management for persistence across pages.

6. **GraphQL API**: All property, booking, and user data must come from the existing GraphQL Federation API (not Supabase directly). I will provide the schema files to you. Generate queries and mutations based on the schema. Do not mock data. Assume the GraphQL API endpoints are already deployed and available.

7. **Additional Requirements**:
   - Use modern Next.js 13+ App Router with React Server Components where it makes sense.
   - Integrate Tailwind CSS for styling consistency.
   - Add error states and loading states that match Airbnb’s polished UX.
   - Include a responsive navbar, search filters, maps (use a placeholder or Leaflet/Google Maps if needed).
   - Ensure accessibility and performance optimizations (lazy loading images, etc.).

Your goal: deliver a **Next.js PWA frontend identical to Airbnb** but powered by our existing **GraphQL backend** and **Supabase Auth**. All features should integrate smoothly with the APIs, and the UI should feel indistinguishable from Airbnb’s site.